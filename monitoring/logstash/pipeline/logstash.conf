input {
  # Logs da aplicação via TCP
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # Logs de arquivos
  file {
    path => "/var/log/pip/application*.log"
    start_position => "beginning"
    codec => json
    type => "application"
  }
  
  file {
    path => "/var/log/pip/audit*.log"
    start_position => "beginning"
    codec => json
    type => "audit"
  }
  
  file {
    path => "/var/log/pip/security*.log"
    start_position => "beginning"
    codec => json
    type => "security"
  }
}

filter {
  # Parse JSON logs
  if [message] =~ /^\{.*\}$/ {
    json {
      source => "message"
    }
  }
  
  # Add timestamp
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }
  
  # Enrich with metadata
  mutate {
    add_field => {
      "environment" => "${ENVIRONMENT:production}"
      "application" => "payment-integration-platform"
    }
  }
  
  # Extract trace information
  if [traceId] {
    mutate {
      add_field => { "trace_id" => "%{traceId}" }
    }
  }
  
  if [spanId] {
    mutate {
      add_field => { "span_id" => "%{spanId}" }
    }
  }
  
  # Classify log level
  if [level] {
    mutate {
      lowercase => [ "level" ]
    }
  }
  
  # Parse stack traces
  if [stack_trace] {
    mutate {
      gsub => [ "stack_trace", "\n", " | " ]
    }
  }
}

output {
  # Send to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "pip-logs-%{type}-%{+YYYY.MM.dd}"
    document_type => "_doc"
  }
  
  # Debug output (comentar em produção)
  # stdout {
  #   codec => rubydebug
  # }
}
