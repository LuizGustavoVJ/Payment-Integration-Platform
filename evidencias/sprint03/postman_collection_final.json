{
  "info": {
    "name": "Payment Integration Platform (PIP) - API Tests",
    "description": "Collection completa para testes da PoC do PIP",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Cenários de Sucesso",
      "item": [
        {
          "name": "Authorize Payment - Approved",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has authorization data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"authorized\");",
                  "    pm.expect(jsonData.authorizationCode).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardToken\": \"tkn_test_approved\",\n  \"amount\": 150.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_123\",\n  \"orderId\": \"order_456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        },
        {
          "name": "Authorize Payment - High Value",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"High value transaction approved\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"authorized\");",
                  "    pm.expect(jsonData.amount).to.eql(5000);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardToken\": \"tkn_test_premium\",\n  \"amount\": 5000.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_premium\",\n  \"orderId\": \"order_high_value\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        }
      ]
    },
    {
      "name": "Cenários de Falha",
      "item": [
        {
          "name": "Authorize Payment - Declined",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 402 Payment Required\", function () {",
                  "    pm.response.to.have.status(402);",
                  "});",
                  "",
                  "pm.test(\"Payment declined with reason\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"declined\");",
                  "    pm.expect(jsonData.errorCode).to.exist;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardToken\": \"tkn_test_declined\",\n  \"amount\": 200.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_123\",\n  \"orderId\": \"order_declined\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        },
        {
          "name": "Authorize Payment - Invalid Card",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 502 Bad Gateway\", function () {",
                  "    pm.response.to.have.status(502);",
                  "});",
                  "",
                  "pm.test(\"Invalid card error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"failed\");",
                  "    pm.expect(jsonData.errorCode).to.eql(\"INVALID_CARD\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardToken\": \"tkn_test_error\",\n  \"amount\": 100.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_123\",\n  \"orderId\": \"order_error\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        },
        {
          "name": "Authorize Payment - Limit Exceeded",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 402 Payment Required\", function () {",
                  "    pm.response.to.have.status(402);",
                  "});",
                  "",
                  "pm.test(\"Limit exceeded error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"declined\");",
                  "    pm.expect(jsonData.errorCode).to.eql(\"LIMIT_EXCEEDED\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardToken\": \"tkn_test_valid\",\n  \"amount\": 15000.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_123\",\n  \"orderId\": \"order_high_limit\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        }
      ]
    },
    {
      "name": "Validações de Entrada",
      "item": [
        {
          "name": "Authorize Payment - Missing Card Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400 Bad Request\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Validation error for missing card token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.errorCode).to.eql(\"VALIDATION_ERROR\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 100.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_123\",\n  \"orderId\": \"order_no_token\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        },
        {
          "name": "Authorize Payment - Invalid Amount",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 400 Bad Request\", function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test(\"Validation error for invalid amount\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.errorCode).to.eql(\"VALIDATION_ERROR\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"cardToken\": \"tkn_test_valid\",\n  \"amount\": -50.00,\n  \"currency\": \"BRL\",\n  \"merchantId\": \"merchant_123\",\n  \"orderId\": \"order_negative\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/v1/payments/authorize",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "authorize"]
            }
          }
        }
      ]
    },
    {
      "name": "Outros Endpoints (Placeholder)",
      "item": [
        {
          "name": "Capture Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "url": {
              "raw": "{{base_url}}/v1/payments/{{payment_id}}/capture",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "{{payment_id}}", "capture"]
            }
          }
        },
        {
          "name": "Void Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "url": {
              "raw": "{{base_url}}/v1/payments/{{payment_id}}/void",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "{{payment_id}}", "void"]
            }
          }
        },
        {
          "name": "Get Payment Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-API-Key",
                "value": "pip_test_12345"
              }
            ],
            "url": {
              "raw": "{{base_url}}/v1/payments/{{payment_id}}",
              "host": ["{{base_url}}"],
              "path": ["v1", "payments", "{{payment_id}}"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "payment_id",
      "value": "123e4567-e89b-12d3-a456-426614174000",
      "type": "string"
    }
  ]
}

